#!/bin/bash
set -e
source $EXTENSION_LOCATION/bin/codeql-utils

for i in "$@"; do
  case $i in
    --auto-detect)
        GITHUB_AUTO_DETECT="1"
        shift
        ;;
    --disable-tracing)
        export CODEQL_TRACING=0
        shift
        ;;
     -l=*|--language=*)
        export CODEQL_LANGUAGES="${i#*=}"
        shift
        ;;
    -c=*|--command=*)
        export CODEQL_BUILD_COMMAND="${i#*=}"
        export CODEQL_TRACING="1"    # enable tracing
        shift
        ;;
    *)
        ;;
  esac
done

 
if [ ${GITHUB_UPLOAD} == 0 ] && [ -z ${GITHUB_REPOSITORY+x} ]; then
    # If the repo isn't set 
    export GITHUB_REPOSITORY="$(basename $PWD)"

elif [ ${GITHUB_UPLOAD} == 1 ] && [ -z ${GITHUB_REPOSITORY+x} ]; then
    error "GITHUB_REPOSITORY must be set"
    exit 1
fi


if [[ ! -z ${CODEQL_LANGUAGES+x} && "$CODEQL_LANGUAGES" != "" ]] ; then
    info "Manually set languages :: $CODEQL_LANGUAGES"

# auto-detect languages
elif [[ "$GITHUB_AUTO_DETECT" = "1" ]]; then
    if ! command -v gh &> /dev/null ; then
        error "GitHub CLI is not installed and can't auto-detect languages"
        exit 1
    fi

    info "Detecting Repository Language(s)"
    # Get the data from GitHub
    # https://github.com/advanced-security/advanced-security-material/blob/main/code-scanning-workflows/reusable_code_scanning-00.yml#L19-L27
    # JSON array
    language_data=$(gh api repos/${GITHUB_REPOSITORY}/languages -q '[{"C":"cpp", "C++":"cpp", "C#":"csharp", "Go":"go", "Java":"java", "JavaScript":"javascript", "TypeScript":"javascript", "Python":"python", "Ruby":"ruby"}[keys[]]] | unique -[null]')
    # Remove unneeded chars
    CODEQL_LANGUAGES=$(echo $language_data | tr -d '"[]')
fi


if [ -z $CODEQL_LANGUAGES ] ; then
    error "No CodeQL languages were set"
    exit 1
fi

# comma seperated list (`java,javascript`)
for CODEQL_LANGUAGE in ${CODEQL_LANGUAGES//,/ } ; do
    debug "CodeQL Language :: $CODEQL_LANGUAGE"

    CODEQL_GITHUB_REPOSITORY=$(echo $GITHUB_REPOSITORY | tr '/' '_')
    CODEQL_DATABASE="$CODEQL_DATABASES/${CODEQL_LANGUAGE}-${CODEQL_GITHUB_REPOSITORY}"

    info "CodeQL Database Name :: $CODEQL_DATABASE"

    if [ -d $CODEQL_DATABASES ] ; then
        info "Deleting old database :: $CODEQL_DATABASE"
        rm -rf $CODEQL_DATABASE
    fi

    debug "CodeQL Binary :: $CODEQL_BINARY"
    debug "Tracing :: $CODEQL_TRACING"

    CODEQL_CREATE="$CODEQL_BINARY database create -j=0 -M=16000 --language=$CODEQL_LANGUAGE"
    
    if [ "$CODEQL_TRACING" = "1" ] && [[ "$CODEQL_LANGUAGE" =~ ^(cpp|csharp|java|go)$ ]]; then
        debug "Swap to a init command and add --begin-tracing"
        # https://codeql.github.com/docs/codeql-cli/creating-codeql-databases/#using-indirect-build-tracing
        CODEQL_CREATE="$CODEQL_BINARY database init --begin-tracing --language=$CODEQL_LANGUAGE --source-root=$WORKSPACE $CODEQL_DATABASE"
    else
        debug "Append only Database"
        debug "CodeQL auto-build is enabled"
        CODEQL_CREATE="$CODEQL_CREATE $CODEQL_DATABASE"
    fi

    info "Runnning CodeQL database init/create command..."
    debug "CodeQL Create Command :: $CODEQL_CREATE"

    eval $CODEQL_CREATE

    if  [ "$CODEQL_TRACING" = "1" ] && [[ "$CODEQL_LANGUAGE" =~ ^(cpp|csharp|java|go)$ ]]; then
        info "Starting CodeQL Tracing..."
        # Note: This only supports one language at a time to be intercepted using tracing
        source $CODEQL_DATABASE/temp/tracingEnvironment/start-tracing.sh

        debug "CodeQL Tracer Languages :: $CODEQL_TRACER_LANGUAGES"
    fi

    if [ ! -z ${CODEQL_BUILD_COMMAND+x} ] && [[ "$CODEQL_LANGUAGE" =~ ^(cpp|csharp|java|go)$ ]] ; then
        info "Running build command :: '$CODEQL_BUILD_COMMAND'"

        eval ${CODEQL_BUILD_COMMAND}

        debug "Finalizing CodeQL Database"
        $CODEQL_BINARY database finalize $CODEQL_DATABASE | true

        debug "Finished running build command..."
    fi

    # Add CodeQL DB to paths
    CODEQL_DATABASE_PATHS="$CODEQL_DATABASE_PATHS $CODEQL_DATABASE"
done

debug "Storing CodeQL Database Paths"
echo $CODEQL_DATABASE_PATHS > $CODEQL_DATABASE_PATHS_FILE
